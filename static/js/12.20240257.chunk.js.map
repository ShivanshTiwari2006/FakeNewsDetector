{"version":3,"file":"static/js/12.20240257.chunk.js","mappings":"4KAIA,MAgHA,EAhHgBA,KACd,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,OACxCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,IA2CnC,OACES,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gBAAeC,SAAC,yCAC9BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAC,6EAInCC,EAAAA,EAAAA,KAAA,YACEF,UAAU,gBACVG,YAAY,kCACZC,MAAOhB,EACPiB,SAAWC,GAAMjB,EAAQiB,EAAEC,OAAOH,UAGpCF,EAAAA,EAAAA,KAAA,UAAQF,UAAU,iBAAiBQ,QAvDjBC,UAKpB,GAJAX,EAAS,IACTN,EAAU,MACVE,EAAe,MAEVN,EAAKsB,OAAV,CAKAd,GAAW,GACX,IACE,MAAMe,QAAiBC,EAAAA,EAAMC,KAC3B,gCACA,CAAEzB,QACF,CACE0B,QAAS,CACP,eAAgB,sBAItBtB,EAAUmB,EAASI,MAEnB,MAAMC,QAA0BJ,EAAAA,EAAMC,KACpC,mCACA,CAAEzB,QACF,CACE0B,QAAS,CACP,eAAgB,sBAItBpB,EAAesB,EAAkBD,KAEnC,CAAE,MAAOE,GACPC,QAAQrB,MAAM,aAAcoB,EAAIN,SAAWM,EAAIN,SAASI,KAAOE,EAAIE,SACnErB,EAAS,kDACX,CACAF,GAAW,EA9BX,MAFEE,EAAS,yCAgCM,EAiB4CsB,SAAUzB,EAAQM,SAC1EN,EAAU,cAAgB,gBAG5BE,IAASK,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAEJ,IAEvCN,IACCQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,iCACV,aAAlBV,EAAO8B,QACNtB,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAArB,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,+DAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SACzBV,EAAOgC,SAASC,KAAI,CAACC,EAASC,KAC7B3B,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAASwB,EAAQE,OAAO,OAAU,IAAEF,EAAQG,QADrCF,WAOfxB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAAiBC,SAAC,+CAKpCR,IACCM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAC,uCACT,iBAAvBR,EAAY4B,QACXnB,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAArB,UACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAC5BR,EAAYoC,OAAOL,KAAI,CAACM,EAAOJ,KAC9B3B,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAS6B,EAAMA,SAAe5B,EAAAA,EAAAA,KAAA,UAC9BH,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,WAAS6B,EAAMC,WAAY7B,EAAAA,EAAAA,KAAA,UAC/BH,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,WAAS6B,EAAMH,YAHfD,UASfxB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wDAIL,C","sources":["pages/Analyze.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Analyze.css\";\r\n\r\nconst Analyze = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [result, setResult] = useState(null);\r\n  const [factResults, setFactResults] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleAnalyze = async () => {\r\n    setError(\"\");\r\n    setResult(null);\r\n    setFactResults(null);\r\n\r\n    if (!text.trim()) {\r\n      setError(\"Please enter a news headline or topic.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:5000/analyze\",\r\n        { text },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setResult(response.data);\r\n\r\n      const factCheckResponse = await axios.post(\r\n        \"http://127.0.0.1:5000/fact-check\",\r\n        { text },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setFactResults(factCheckResponse.data);\r\n\r\n    } catch (err) {\r\n      console.error(\"API Error:\", err.response ? err.response.data : err.message);\r\n      setError(\"Something went wrong! Please check the backend.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"analyze-container\">\r\n      <h1 className=\"analyze-title\">üì∞ Fake News Verification</h1>\r\n      <p className=\"analyze-description\">\r\n        Enter a news headline or topic below and let AI check its authenticity.\r\n      </p>\r\n\r\n      <textarea\r\n        className=\"analyze-input\"\r\n        placeholder=\"Enter news headline or topic...\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n\r\n      <button className=\"analyze-button\" onClick={handleAnalyze} disabled={loading}>\r\n        {loading ? \"Checking...\" : \"Verify News\"}\r\n      </button>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {result && (\r\n        <div className=\"result-box\">\r\n          <h2 className=\"result-title\">üìä Analysis Result</h2>\r\n          {result.status === \"verified\" ? (\r\n            <>\r\n              <p className=\"verified-text\">‚úÖ This news has been reported by legitimate sources:</p>\r\n              <ul className=\"article-list\">\r\n                {result.articles.map((article, index) => (\r\n                  <li key={index}>\r\n                    <strong>{article.source}:</strong> {article.title}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          ) : (\r\n            <p className=\"unverified-text\">üö® Warning: No sources found!</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {factResults && (\r\n        <div className=\"fact-check-box\">\r\n          <h2 className=\"fact-check-title\">üîç Fact-Checking Results</h2>\r\n          {factResults.status === \"fact-checked\" ? (\r\n            <>\r\n              <ul className=\"fact-check-list\">\r\n                {factResults.claims.map((claim, index) => (\r\n                  <li key={index}>\r\n                    <strong>{claim.claim}</strong><br />\r\n                    <em>Rating: {claim.rating}</em><br />\r\n                    <small>Source: {claim.source}</small>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          ) : (\r\n            <p>No fact-checking results found for this topic.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analyze;\r\n"],"names":["Analyze","text","setText","useState","result","setResult","factResults","setFactResults","loading","setLoading","error","setError","_jsxs","className","children","_jsx","placeholder","value","onChange","e","target","onClick","async","trim","response","axios","post","headers","data","factCheckResponse","err","console","message","disabled","status","_Fragment","articles","map","article","index","source","title","claims","claim","rating"],"sourceRoot":""}