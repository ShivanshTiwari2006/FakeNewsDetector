{"version":3,"file":"static/js/190.57a423ca.chunk.js","mappings":"gMAMA,MA+HA,EA/HcA,KACZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,GAChCK,GAASC,EAAAA,EAAAA,MAgDTC,EAAmBC,UACvB,IACE,MAAMC,EAAQC,eAAeC,QAAQ,aAGrC,GAFAC,QAAQC,IAAIJ,IAEPA,EACH,OAGF,MAAMK,QAAiBC,EAAAA,EAAMC,IAAI,iDAAkD,CACjFC,QAAS,CACPC,cAAc,UAADC,OAAYV,MAI7BG,QAAQC,IAAIC,GAERA,EAASM,KAAKC,QAChBT,QAAQC,IAAIC,EAASM,KAAKE,MAE1BV,QAAQC,IAAIC,EAASM,KAAKG,SAAW,+BAEzC,CAAE,MAAOC,GAAM,IAADC,EAAAC,EACZd,QAAQe,MAAM,+BAAgCH,GAC9CZ,QAAQC,KAAgB,QAAZY,EAAAD,EAAIV,gBAAQ,IAAAW,GAAM,QAANC,EAAZD,EAAcL,YAAI,IAAAM,OAAN,EAAZA,EAAoBH,UAAW,oBAC7C,GAKF,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJF,EAAAA,EAAAA,MAAA,QAAMI,SAlEWxB,UACnByB,EAAEC,iBAIF,IACE,MAAMpB,QAAiBC,EAAAA,EAAMoB,KAAK,uCAAwC,CACxErC,QACAG,aAGF,GAAIa,EAASM,KAAKC,QAAS,CACzBT,QAAQC,IAAIC,GAEZsB,EAAAA,GAAMf,QAAQ,qBACd,MAAMZ,EAAQK,EAASM,KAAKX,MAC5BG,QAAQC,IAAIJ,GAEZC,eAAe2B,QAAQ,YAAa5B,GACpCJ,EAAS,eACTE,GACF,MACE6B,EAAAA,GAAMT,MAAMb,EAASM,KAAKG,SAAW,eAEzC,CAAE,MAAOI,GACPf,QAAQe,MAAM,sBAAuBA,GACrCS,EAAAA,GAAMT,MAAMA,EAAMb,SAASM,KAAKG,SAAW,gDAC7C,GAuC+BO,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAAA,SACEO,KAAK,QACLC,KAAK,QACLC,YAAY,mBACZC,MAAO3C,EACP4C,SAAWT,GAAMlC,EAASkC,EAAEU,OAAOF,SAEpCtC,EAAOL,QAASiC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAE3B,EAAOL,YAE3D8B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPC,EAAAA,EAAAA,KAAA,SACEO,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAOxC,EACPyC,SAAWT,GAAM/B,EAAY+B,EAAEU,OAAOF,SAEvCtC,EAAOF,WAAY8B,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAE3B,EAAOF,eAE9D8B,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAST,UAAU,YAAWC,SAAC,cAK9CF,EAAAA,EAAAA,MAAA,KAAGgB,MAAO,CAAEC,UAAW,UAAWf,SAAA,CAAC,yBACV,KACvBC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CACHC,GAAG,UACHlB,UAAU,cACVe,MAAO,CAAEI,MAAO,UAAWC,eAAgB,aAAcnB,SAC1D,iBAIC,C","sources":["pages/Login.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport '../styles/Login.css'\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const navigate=useNavigate();\n\n  const validateForm = () => {\n    const errors = {};\n    if (!email) {\n      errors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      errors.email = \"Please enter a valid email address\";\n    }\n    if (!password) {\n      errors.password = \"Password is required\";\n    }\n    return errors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    \n\n    try {\n      const response = await axios.post(\"http://localhost:3000/api/auth/login\", {\n        email,\n        password,\n      });\n\n      if (response.data.success) {\n        console.log(response);\n        \n        toast.success(\"Login successful!\");\n        const token = response.data.token;\n        console.log(token);\n        \n        sessionStorage.setItem(\"authToken\", token);\n        navigate('/homeScreen')\n        fetchUserDetails();\n      } else {\n        toast.error(response.data.message || \"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      toast.error(error.response.data.message || \"Something went wrong. Please try again later.\");\n    }\n  };\n\n \n\n    \n  const fetchUserDetails = async () => {\n    try {\n      const token = sessionStorage.getItem('authToken'); \n      console.log(token);\n      \n      if (!token) {\n        return;\n      }\n\n      const response = await axios.get('http://localhost:3000/api/auth/get-userDetails', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      console.log(response);\n      \n      if (response.data.success) {\n        console.log(response.data.user);\n      } else {\n        console.log(response.data.message || 'Failed to fetch user details');\n      }\n    } catch (err) {\n      console.error('Error fetching user details:', err);\n      console.log(err.response?.data?.message || 'An error occurred');\n    }\n  };\n\n  // fetchUserDetails();\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {errors.email && <span className=\"error-message\">{errors.email}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {errors.password && <span className=\"error-message\">{errors.password}</span>}\n        </div>\n        <button type=\"submit\" className=\"login-btn\">\n          Login\n        </button>\n      </form>\n      \n      <p style={{ textAlign: \"center\" }}>\n        Don't have an account?{\" \"}\n        <Link\n          to=\"/signUp\"\n          className=\"toggle-link\"\n          style={{ color: \"#007BFF\", textDecoration: \"underline\" }}\n        >\n          Sign Up\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Login","email","setEmail","useState","password","setPassword","errors","setErrors","navigate","useNavigate","fetchUserDetails","async","token","sessionStorage","getItem","console","log","response","axios","get","headers","Authorization","concat","data","success","user","message","err","_err$response","_err$response$data","error","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","post","toast","setItem","type","name","placeholder","value","onChange","target","style","textAlign","Link","to","color","textDecoration"],"sourceRoot":""}